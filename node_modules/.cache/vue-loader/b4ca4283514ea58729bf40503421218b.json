{"remainingRequest":"/Users/sulliven/Desktop/vue/vue-cource/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sulliven/Desktop/vue/vue-cource/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sulliven/Desktop/vue/vue-cource/src/views/Home.vue","mtime":1574857369750},{"path":"/Users/sulliven/Desktop/vue/vue-cource/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sulliven/Desktop/vue/vue-cource/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sulliven/Desktop/vue/vue-cource/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sulliven/Desktop/vue/vue-cource/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// @ is an alias to /src\nimport HelloWorld from '@/components/HelloWorld.vue'\nimport axios from 'axios'\nexport default {\n  name: 'home',\n  components: {\n    HelloWorld\n  },\n  props: {\n    food: {\n      type: String,\n      default: 'apple'\n    }\n  },\n  // 路由出发进入时调用 但是这时候页面还没有渲染 获取不到this\n  beforeRouteEnter (to, from, next) {\n    // console.log(to.name)\n    // console.log(from.name)\n    // next()\n    // 若想使用this vm就是你当前组件的实例\n    next(vm => {\n      console.log(vm)\n    })\n  },\n  // 页面离开时调用 比如提示用户是否保存 之后再离开 可以用this\n  // beforeRouteLeave (to, from, next) {\n  //   const leave = confirm('确定要离开吗')\n  //   if (leave)next()\n  //   else next(false)\n  // },\n  // 路由发生变化 组件被复用的时候调用  可以用this\n  beforeRouteUpdate (to, from, next) {\n    console.log(to.name, from.name)\n  },\n  methods: {\n    handleClick (type) {\n      const name = 'bbbb'\n      if (type === 'back') {\n        this.$router.go(-1)\n      } else {\n        // this.$router.push('/parent')\n        this.$router.push({\n          // name: 'argu',\n          // params: {\n          //   name: 'aaa'\n          // }\n          // 简写\n          path: `/argu/${name}`\n          // 注意 path+params的组合方式 是会直接忽略你params里面的的值\n          // query: {\n          //   name: 'sulliven'\n          // }\n        })\n      }\n      // push 和 replace 区别\n      // push是在当前路由站加入一个路由 所以你返回的是上一级\n      // replace 是直接替换 没有在zhan当中添加，所以看起来你返回的是上上级页面\n      // this.$router.go(-1)\n    //  this.$router.back()\n    },\n    getUserInfo () {\n      //\n      // eslint-disable-next-line standard/object-curly-even-spacing\n      axios.post('getuserinfo', { userId: 21 }).then(res => {\n        console.log(res)\n      })\n    }\n  }\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <b>{{food}}</b>\n    <img alt=\"Vue logo\" src=\"../assets/logo.png\">\n    <HelloWorld msg=\"Welcome to Your Vue.js App\"/>\n    <button @click=\"handleClick('back')\">返回上一页</button>\n    <button @click=\"handleClick('push')\">跳转push</button>\n    <button @click=\"handleClick('push')\">跳转push</button>\n    <button @click=\"getUserInfo\">获取数据</button>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport HelloWorld from '@/components/HelloWorld.vue'\nimport axios from 'axios'\nexport default {\n  name: 'home',\n  components: {\n    HelloWorld\n  },\n  props: {\n    food: {\n      type: String,\n      default: 'apple'\n    }\n  },\n  // 路由出发进入时调用 但是这时候页面还没有渲染 获取不到this\n  beforeRouteEnter (to, from, next) {\n    // console.log(to.name)\n    // console.log(from.name)\n    // next()\n    // 若想使用this vm就是你当前组件的实例\n    next(vm => {\n      console.log(vm)\n    })\n  },\n  // 页面离开时调用 比如提示用户是否保存 之后再离开 可以用this\n  // beforeRouteLeave (to, from, next) {\n  //   const leave = confirm('确定要离开吗')\n  //   if (leave)next()\n  //   else next(false)\n  // },\n  // 路由发生变化 组件被复用的时候调用  可以用this\n  beforeRouteUpdate (to, from, next) {\n    console.log(to.name, from.name)\n  },\n  methods: {\n    handleClick (type) {\n      const name = 'bbbb'\n      if (type === 'back') {\n        this.$router.go(-1)\n      } else {\n        // this.$router.push('/parent')\n        this.$router.push({\n          // name: 'argu',\n          // params: {\n          //   name: 'aaa'\n          // }\n          // 简写\n          path: `/argu/${name}`\n          // 注意 path+params的组合方式 是会直接忽略你params里面的的值\n          // query: {\n          //   name: 'sulliven'\n          // }\n        })\n      }\n      // push 和 replace 区别\n      // push是在当前路由站加入一个路由 所以你返回的是上一级\n      // replace 是直接替换 没有在zhan当中添加，所以看起来你返回的是上上级页面\n      // this.$router.go(-1)\n    //  this.$router.back()\n    },\n    getUserInfo () {\n      //\n      // eslint-disable-next-line standard/object-curly-even-spacing\n      axios.post('getuserinfo', { userId: 21 }).then(res => {\n        console.log(res)\n      })\n    }\n  }\n}\n</script>\n"]}]}